---
title: "final-project"
format: html
editor: visual
---

## EPI 590R Final Project - Naly Yang

Getting the data:

```{r}
#read in tidytuesdayR package
install.packages("tidytuesdayR")
#read the csv file 
centenarians <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-30/centenarians.csv')
```

Recoding data to prepare for regression analysis:

```{r}
#gender variable recoding. if gender= female, then gender1= 1. male= 0.
centenarians$gender1 <- ifelse(centenarians$gender %in% c("female"),1,0)
#still_alive recoding. if still_alive= alive, then still_alive1= 1.deceased= 0.
centenarians$still_alive1 <- ifelse(centenarians$still_alive %in% c("alive"),1,0)
```

## {gtsummary} table of descriptive statistics

```{r}
#| label: tbl-descriptive
#| tbl-cap: "This table contains descriptive statistics."
library(gtsummary)
tbl_summary(
	centenarians,
	by = gender,
	include = c(gender, age, place_of_death_or_residence,
							still_alive),
	label = list(
		gender ~ "Gender",
		age ~ "Age",
		place_of_death_or_residence ~ "Place of Death/Residence",
		still_alive ~ "Living Status"
	),
	missing_text = "Missing")
```

## Fit a regression and present well-formatted results from the regression

Regression:

```{r}
linear_model <- lm(age ~ gender1 + still_alive1,
									 data = centenarians)
```

Table:

```{r}
#| label: tbl-regression
#| tbl-cap: "This table contains regression results."
tbl_regression(
	linear_model,
	intercept = TRUE,
	label = list(
	  age ~ "Age",
		gender1 ~ "Gender",
		still_alive1 ~ "Living Status"
	))
```

## Creating a figure

```{r}
#round age data first. round down to nearest integer & create new vector for the roudned age.
rounded_age <- floor(centenarians$age)
#| label: fig-hist
#| fig-cap: "This is a histogram of the rounded ages."
hist(rounded_age)
```

## Write and use a function

standard deviation:
```{r}
#testing first by making a dataset
x <- c(20,4,67,100,65,20,17,66,83,61,33,54,22,39,70)
#standard dev steps:
#first find the mean: mean(x)
#find each datapoint's distance to the mean: x-mean
#square of each datapoint's distance to the mean: (x-mean)^2
#sum these distances: sum(x-mean)(x)^2
#divide by n-1  data points in the dataset: (/ length(x)-1)
#double check parenthesis
s <- sqrt(sum(
    (x-mean(x))^ 2 /
      (length(x)-1)))
print(s)
#checking
sd(x)
# it works :) now use on dataset
#use originial "age" variable, not the rounded variable you used earlier in the Figure section.
st_dev <-sqrt(sum
        ((centenarians$age-mean(centenarians$age))^2 /
            (length(centenarians$age)-1)))
print(st_dev)
#checking
sd(centenarians$age)
```

